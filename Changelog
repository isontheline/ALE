0.4.6

o	Allow --ip and --hf-enhance to be used together.

o	Initialize the drizzled image to be uniformly black.  This fixes
	a bug introduced in 0.4.2.

o	Allocate the correct size image for drizzling.  This fixes a bug
	introduced in 0.4.5.

0.4.5

o	Ensure correct transformation scaling and difference calculation after
	alignment is complete, even if alignment terminates with a reduced
	level of detail (i.e. perturb-lower > 2).

o	Separate the scale() function into two cases: scale() is reserved for
	scale factors greater than or equal to one, as in user-specified
	scaling; and scale_by_half() is used for the scale factor 0.5, needed
	to provide multiple levels of detail in alignment.  Modify the
	scale_by_half() case to reflect source pixel values more fairly.  (This
	change affects alignment behavior at reduced levels of detail.)

o	Reduce whitespace in usage() message.

o	Modify align::diff() to use correctly scaled image offset values.
	(Bugfix for alignment with --extend.)

o	Modify align.h so that the image definition array is correctly scaled
	for all levels of detail.  (Bugfix for alignment with --extend.)

o	Modify image.h to correctly handle image offset values.  (Bugfix
	for --extend operation.)

o	Remove call to stat() in image_rw.h.  This improves OS independence,
	and apparently also allows URL-specification of images when compiled
	with ImageMagick support.

o	Modify image file handler interface so that input files are not scaled.
	Perform scaling, when necessary, outside of the file handler.  Since
	unscaled data is needed by the drizzling and Irani-Peleg code, this
	fixes bugs in those modules.  

0.4.4

o	Modify the Monte Carlo pixel selection algorithm so that the expected
	number of sampled pixels more closely matches the specified number in
	typical cases.

o	Specify the binary mode flag to fopen() calls in the PPM file handler.
	This change resolves a bug discovered by Benjamin Hill.

0.4.3

o	Add support for Monte Carlo alignment of images, in which only a
	random subset of pixels is sampled.

o	Add an option to disable incremental image output.

0.4.2

o	Implement an image reconstruction option based on the work of Irani and
	Peleg.

o	Clean up source; move rendering and alignment functions into separate
	files.

o	Change valid drizzling diameter interval to (0,1].

o	Modify PPM file reader to correctly handle comments in PPM files; this
	resolves a bug pointed out by Benjamin Hill.

o	Add missing typecast to resolve compile warning under GCC 3.2.

o	Make changes to gpt.h that may reduce the Euclidean alignment time.

o	Move ale.c to ale.cc to follow one of the many C++ naming conventions.

0.4.1

o	Change language to C++.

o	Code cleanup in ale.c, image.h, and gpt.h.

o	Separate into a number of subsections the option descriptions in the
	README 

o	Add URL information to README

o	Add an experimental drizzling implementation.  Research on drizzling
	by Richard Hook and Andrew Fruchter was brought to the attention of 
	the author by Dan Kaminsky.

o	Add an option to use the previous frame's final transformation as the
	default alignment.

o	Change pixel weight data type so that more than 255 images can
	be merged.

o	Add support for increased spatial extents.  Research on increased
	spatial extents by Steve Mann was brought to the attention of the
	author by Dan Egnor.

o	Modify the transformation algorithm to use transformations from the
	domain of the input image to the range of the target image.  This
	change is reflected in transformation files.  Maintain support for
	old transformation file versions, however.

o	Add version information to transformation files and update the version
	from 0 to 2.

0.4.0p1

o	Merge a bugfix from Debian ALE package version 0.4.0-1.  Without this
	fix, an assertion failure can occur when ImageMagick support is
	enabled.  Original fix implemented by Nick Rusnov.  

0.4.0

o	Add support for general scaling parameters (i.e. all scale 
	factors >= 1.0).  --scale2, --scale4, and --scale8 are now deprecated, 
	and replaced with a more general --scale=x argument.

o	Support enhancement of high frequencies even when the scale factor is 
	1.0.

o	Modify the high-frequency filter algorithm to support filtering near
	the border of an image.

o	Modify the high-frequency filter function so that the response is now
	(4/n)^2 times what it used to be, where n is the scale factor.  

0.3.2

o	Don't filter high frequencies if we're not enhancing them.  This 
	improves efficiency, but should not affect output.

0.3.1

o	Output average match statistic.

o	Update informational output to transformation files to include original 
	frame.

o	Add support for post-enhancement of high-frequency details.

0.3.0

o	Add support for loading and saving transformation data.

o	Add an option to set the upper bound on correction steps.

o	Modify Makefile to compile with size optimization, since this 
	appears to improve speed characteristics in some cases.

o	Move transformation data structure and related functions to 
	a separate header file.

0.2.0

o	Add support for general projective transformations, and change/add
	options as follows:

		'--translation'	used to be	'--no-rotate'
		'--euclidean'	used to be 	'--rotate'
		'--projective'	is a new option

0.1.2

o	Add optional support for .jpg, .png, .tiff, and other file formats
	through ImageMagick.  Inspired by a translation script idea suggested
	by Nick Rusnov.

o	Don't segfault if a file can't be opened.

0.1.1

o	Use reduced levels of detail in coarser alignment steps to increase
	speed.

o	Change perturbation step lower-bound check from less-than ('<') to 
	less-than-or-equal-to ('<=').  Change default lower bound
	to .125 from .1 (the behavior is the same, but the value
	makes more sense).

o	Change perturbation initial value to 32 pixels from
	16 pixels, since coarse alignment is now less expensive.

o	Modify scale function so that the borders aren't 
	corrupted (too badly).

0.1.0

o	Add support for correction of rotation about the lens axis.

o	Add an optional match criterion for merging.

o	Add an option to adjust minimum step-size.

o	Add flags to specify which channels to use for alignment.  Use
	a summation of all channels by default.

o	Add an option to modify the error metric exponent, and change
	the default value from 1 to 2. 

o	Display information about how well a new image matches
	the accumulated image.

o	Add a rule for ale.exe to the Makefile.  

0.0.0
	Initial release.
