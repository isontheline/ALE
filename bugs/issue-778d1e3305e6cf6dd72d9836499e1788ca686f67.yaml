--- !ditz.rubyforge.org,2008-03-06/issue 
title: Consider keeping 3D implementation in ALE initially, using either wrappers (e.g., d2::image over ale_image) or OpenCL for deprecated interfaces.
desc: ""
type: :task
component: ale
release: 
reporter: David Hilvert <dhilvert@auricle.dyndns.org>
status: :unstarted
disposition: 
creation_time: 2009-03-27 17:42:45.482605 Z
references: []

id: 778d1e3305e6cf6dd72d9836499e1788ca686f67
log_events: 
- - 2009-03-27 17:42:45.948075 Z
  - David Hilvert <dhilvert@auricle.dyndns.org>
  - created
  - ""
- - 2009-03-27 17:52:43.565918 Z
  - David Hilvert <dhilvert@auricle.dyndns.org>
  - commented
  - |-
    Consider that, rather than wrapping d2::image over ale_image, it might be
    better to have image_rw return either d2::image or ale_image, according to
    request.
- - 2009-03-27 18:04:29.155755 Z
  - David Hilvert <dhilvert@auricle.dyndns.org>
  - commented
  - |-
    An alternative to either wrappers or in-ALE OpenCL would be selective implementation
    of algorithms within Libale, an approach that reflects what is generally being done
    for the rest of the code, and which could also be applied to things like visp.
- - 2009-03-28 05:18:27.499041 Z
  - David Hilvert <dhilvert@auricle.dyndns.org>
  - commented
  - |-
    Note, given support for nice things such as vectors in OpenCL, that a migration
    to Libale of the sort occurring in the 2D code might also be appropriate for
    3D.  As a very rough example of what might occur, a new type 'scene' could be
    added to Libale to subsume the sorts of operations currently occurring within
    the d3::scene class.
