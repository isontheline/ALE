#!/bin/bash

# Copyright 2006 David Hilvert <dhilvert@auricle.dyndns.org>,
#                              <dhilvert@ugcs.caltech.edu>

#  This file is part of the Anti-Lamenessing Engine.
#
#  The Anti-Lamenessing Engine is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#
#  The Anti-Lamenessing Engine is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Anti-Lamenessing Engine; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

###
### 'bootstrap' generates build files for distribution.
###

#
# If a version argument is given, generate a tarball.
#

if test "x$1" = "x-v"; then
	BOOTSTRAP_VERSION=$2

	if test "x$BOOTSTRAP_VERSION" = "x"; then
		echo "bootstrap: -v requires a version argument."
		exit 1
	fi

	SOURCE_DIR=`pwd`

	REMOTE_REPO=`./version.sh git-repo` 

	GENERIC_PACKAGE_NAME=`./version.sh invocation`

	PACKAGE_NAME="$GENERIC_PACKAGE_NAME-$BOOTSTRAP_VERSION"

	TEMPDIR=`mktemp -d`

	cd $TEMPDIR

	if test $SOURCE_DIR = `pwd`; then
		echo "$0: could not change directory from source."
		cd $SOURCE_DIR
		exit 1
	fi

	if ! git clone "$SOURCE_DIR" "$PACKAGE_NAME" && ! git clone "$REMOTE_REPO" "$PACKAGE_NAME"; then
		echo "$0: Could not perform git clone."
		cd $SOURCE_DIR
		rm -rf $TEMPDIR
		exit 1
	fi

	cd $PACKAGE_NAME

	if ! git checkout $BOOTSTRAP_VERSION; then
		echo "$0: Could not check out version $BOOTSTRAP_VERSION."
		cd $SOURCE_DIR
		rm -rf $TEMPDIR
		exit 1
	fi

	mv .git ../git-moved-$BOOTSTRAP_VERSION

	if grep ":version:" VERSION; then
		(echo ":%s/^:version:.*/:version:	$BOOTSTRAP_VERSION/"; echo ":wq") | ex VERSION
	elif test -e VERSION; then
		echo "$BOOTSTRAP_VERSION" > VERSION
	fi

	if test -e bootstrap && (! chmod a+x bootstrap || ! ./bootstrap); then
		echo "$0: Nested bootstrap failed."
		cd $SOURCE_DIR
		rm -rf $TEMPDIR
		exit 1
	fi

	cd ..

	tar czf $PACKAGE_NAME.tar.gz $PACKAGE_NAME

	cd $SOURCE_DIR

	mv $TEMPDIR/$PACKAGE_NAME.tar.gz .

	rm -rf $TEMPDIR

	echo "Bootstrapped package created as $PACKAGE_NAME.tar.gz."

	exit 0
fi

#
# Check for the existence of a configure script.
#

if test -e configure && test "x$1" != "x-r"; then
	echo
	echo "To install:"
	echo "1) Run './configure'."
	echo "2) Run 'make'."
	echo "3) Run 'make install'."
	echo ""
	echo "* To regenerate configure, run '$0 -r'"
	echo
	exit 1
fi

chmod a+x version.sh

if ! which gnulib-tool &> /dev/null; then
	echo "*** Cannot find 'gnulib-tool'. ***"
	exit 1
fi

if ! which ln &> /dev/null; then
	echo "*** Cannot find 'ln'. ***"
	exit 1
fi

if ! which automake &> /dev/null; then
	echo "*** Cannot find 'automake'. ***"
	exit 1
fi

if ! which autoreconf &> /dev/null; then
	echo "*** Cannot find 'autoreconf'. ***"
	exit 1
fi

if ! test -e /usr/share/aclocal/acx_pthread.m4; then
	echo "*** Cannot find file '/usr/share/aclocal/acx_pthread.m4'. ***"
	exit 1
fi

#
# Add autoconf archive files.
#

mkdir -p m4
cp /usr/share/aclocal/acx_pthread.m4 m4/.
cp /usr/share/aclocal/ax_lang_compiler_ms.m4 m4/.
cp /usr/share/aclocal/ax_check_gl.m4 m4/.
cp /usr/share/aclocal/ax_check_glu.m4 m4/.
cp /usr/share/aclocal/ax_check_glut.m4 m4/.

#
# Make documentation
#

chmod a+x doc/make-changelog
chmod a+x doc/make-infos
XSLT_VERSION_INFO=`./version.sh -x`
export XSLT_VERSION_INFO
make -C doc ../TODO ../README ../ChangeLog ../NEWS
# XXX: Asciidoc considers out-of-directory includes unsafe.
a2x --asciidoc-opts="--unsafe" -f manpage doc/man/ale.1.txt

#
# Make web documentation
#

make -C doc/web

#
# Import GNU extension strndup
#

gnulib-tool --libtool --import strndup error strtod

#
# Placeholders for automake-mandated files.
#

# touch NEWS
# touch AUTHORS

#
# Use the automake-mandated spelling for the changelog.
#

# ln -s Changelog ChangeLog

#
# Run autotools' bootstrap script, adding things that automake thinks are
# missing, among other things (--install).
#

autoreconf --install

#
# Run automake again, with the --foreign option.
#

# echo ""
# echo "Rerunning automake with --foreign flag."
# automake --foreign

#
# Make wrapper script executable
#

chmod a+x ./ale

#
# Indicate that we're done.
# 

echo ""
echo "Done."

#
# Tell the user what to do next.
#

echo
echo "To install:"
echo "1) Run './configure'."
echo "2) Run 'make'."
echo "3) Run 'make install'."

