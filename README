ALE version 0.4.1
=================


Overview
--------

ALE is designed to produce relatively alias-free images from digital camera
samples.  Much of it could be applied to images from any source, as long as
they are in PPM binary format.  

Other image formats can optionally be supported by ImageMagick.  See the
section 'Compiling from source' below for more information on compiling with
ImageMagick support.


Downloading a binary
--------------------

	Windows
	-------

	Download ale-x_x_x-win32.zip, unzip, and execute ale.exe.  Note that 
	ALE takes arguments on the command line, so you may need to open a 
	command prompt window to use ALE successfully.  Typing 'ale.exe' with 
	no arguments will print a usage message.  

	This build does not use ImageMagick for handling files, so only PPM
	binary format is currently supported.  If you want support for files
	other than PPM, try compiling from source; otherwise, convert the input
	files to PPM if necessary (e.g. with ImageMagick's command-line
	utilities).

	
	Other Platforms
	---------------

	No binaries provided.  Compile from source.


Compiling from source (version 0.4.x)
-------------------------------------

You will need GCC (with C++ support) and a make utility (GNU Make will do
fine).  To compile from source, download the tarball into a directory, expand
it with 'tar xzf ale-x.x.x.tar.gz', enter the unzipped directory, and type
either 'make' or 'make IMAGEMAGICK=1', depending on whether ImageMagick support
is desired.  The makefile may need some tweaking on Windows systems (e.g. you
may want to write the output to 'ale.exe' or something.


Using ALE (version 0.4.x)
-------------------------

Usage: ale [<options>] <original-frame> [<supplemental-frame> ...] <output-file>
   or: ale --version

ALE merges supplemental frames with an original frame to produce a single
output file result.  Unless ALE has been compiled with the ImageMagick option,
all files must be in PPM binary (as opposed to ascii) format.  The merge is
produced incrementally, and the output file is updated as the process
progresses.  Options are described in the next section.


Options (version 0.4.1)
-----------------------


Alignment channel options:

--align-all       Align images using all color channels
--align-green     Align images using the green channel
--align-sum       Align images using a sum of channels [default]


Transformation options:

--translation     Only adjust the position of images
--euclidean       Adjust the position and orientation of images [default]
--projective      Use projective transformations.  Best quality, but slow.


Image extents:

--extend          Increase output image extents to accommodate all pixel data.
--no-extend       Don't increase extents; crop to original frame. [default]


Transformation defaults:

--identity        Default alignment begins with identity transform. [default]
--follow          Default alignment begins with the previous frame's transform.


Transformation file operations:

--trans-load=x    Load initial transformation settings from file x
--trans-save=x    Save final transformation data in file x


Tunable parameters:

--scale=x         Scale images by the factor x (where x is at least 1.0)
--hf-enhance=x    Enhance high frequency details by factor x. (0.0 is default)
--metric=x        Set the error metric exponent (2 is default)
--threshold=x     Min. match threshold; a perfect match is 100.  (0 is default)
--perturb-upper=x Max. correction step, in pixels or degrees (32.0 is default)
--perturb-lower=x Min. correction step, in pixels or degrees (.125 is default)


Drizzling [very experimental]:

--drizzle-diam=x  Drizzle with input pixel diameter x (between 0 and 1).
--drizzle-only    If drizzling, output black for pixels with no drizzle data.


Option Descriptions (version 0.4.1)
-----------------------------------


Transformations:

ALE supports general projective transformations, the 'correct' type of
transformation to use with images obtained from digital cameras.  By default,
however, only euclidean transformations (i.e. rotation and translation) are
used.  To use general projective transformations, specify the option
'--projective'.  Note that alignment can take a long time when this option is
used.


Image extents:

By default, pixels falling outside of the region of the original frame are 
discarded (--no-extend).  To increase spatial extents and accommodate all
pixel data, use the --extend option.  This option may be useful in providing
additional constraints for alignment or -- in combination with the --follow
option described in the next section -- creating panoramic images.


Transformation defaults:

When aligning a new supplemental frame, ALE must begin with an initial
transformation.  If this transformation is not supplied by a transformation
data file (see next section), a default transformation will be used.
The --identity option indicates that the identity transform should be used as
the default transformation, whereas --follow indicates that the previous
frame's final transformation should be used.  

If a frame does not meet the threshold (see Threshold section below), its final
transform will not be used by --follow.  If there is no valid previously
aligned frame to follow (e.g. when aligning the first supplemental frame), the
identity transform is used instead.

The --follow option may be useful when significant panning or zooming occurs.


Transformation data files:

Transformation data may be loaded from a file, overriding the transformation
defaults, or saved to a file once alignment is complete.  Note that projective
transformation data will be ignored when performing euclidean alignment.  On
the other hand, euclidean transformation data can be used to set the initial
values for projective alignment.  When loading transformation data, it may also
be useful to reduce the perturbation upper bound.  

Transformation files now contain information about the version of file handler
they were created with, currently version 2.  ALE versions older than 0.4.1
read and write version 0 transformation files but, due to changes in the
transformation algorithm, will not correctly read files written with newer
versions of ALE.  On the other hand, new versions of ALE can still read the old
version 0 transformation files.


Perturbation bounds:

No correction step smaller than perturb-lower or larger than perturb-upper will
be made in aligning images.  Note that correction steps larger than 2 are
performed on images with a reduced level of detail and that all correction step
sizes are some power of two.  If the interval [perturb-lower, perturb-upper]
does not contain a power of two, no correction will be performed.


Error metric:

The error metric for pixel components a and b is (abs(a-b)^x), where x is the
error metric exponent.  Larger exponents will cause the alignment process to be
more influenced by smaller image details.  


Threshold:

If a supplemental frame does not meet the minimum match threshold, it will not
contribute to the final output and ALE will display the message 'no match'.
Match values should be in the interval [0,100].


Scaling:

If a scaling argument is given, ALE will internally scale all input
frames by the scale factor, resulting in an output file of this larger
scale.  


High-frequency Enhancement:

As of version 0.3.1, ALE supports a high-frequency enhancement argument.
Enhancement occurs on the final output of the alignment and merging algorithms
after all inputs have been processed.  As of version 0.4.0, it is possible to
use this feature with unscaled images, and the filter response has been
normalized so that the response for images scaled by n is now (4/n)^2 times
what it was in 0.3.x.  


Drizzling [very experimental]:

Drizzling may preserve image details better than the standard ALE rendering
approach.  The currently implemented drizzling code is very experimental.

The --drizzle-diam=x argument indicates that drizzling should be used and that
the length of each side of the reduced source pixel footprint is x (between 0
and 1) where the distance between pixel centers is 1.  

When the scale factor is 1.0, --drizzle-diam=1 should correspond roughly to the
standard ALE rendering approach, but may perform better in circumstances where
zooming or motion along the optical axis is involved.

If --drizzle-diam is used in combination with --drizzle-only, pixels receiving
no drizzle data will not be assigned data from the standard rendering approach,
but will instead be rendered as black pixels.


URLs
----

Home Page		http://auricle.dyndns.org/ALE/


Contact
-------

David Hilvert <dhilvert@ugcs.caltech.edu>
