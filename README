ALE version 0.4.3
=================


Overview
--------

ALE is designed to produce relatively alias-free images from digital camera
samples.  Much of it could be applied to images from any source, as long as
they are in PPM binary format.  

Other image formats can optionally be supported by ImageMagick.  See the
section 'Compiling from source' below for more information on compiling with
ImageMagick support.


Downloading a binary
--------------------

	Windows
	-------

	Download ale-x_x_x-win32.zip, unzip, and execute ale.exe.  Note that 
	ALE takes arguments on the command line, so you may need to open a 
	command prompt window to use ALE successfully.  Typing 'ale.exe' with 
	no arguments will print a usage message.  

	This build does not use ImageMagick for handling files, so only PPM
	binary format is currently supported.  If you want support for files
	other than PPM, try compiling from source; otherwise, convert the input
	files to PPM if necessary (e.g. with ImageMagick's command-line
	utilities).

	
	Other Platforms
	---------------

	No binaries provided.  Compile from source.


Compiling from source (version 0.4.x)
-------------------------------------

You will need GCC (with C++ support) and a make utility (GNU Make will do
fine).  To compile from source, download the tarball into a directory, expand
it with 'tar xzf ale-x.x.x.tar.gz', enter the unzipped directory, and type
either 'make' or 'make IMAGEMAGICK=1', depending on whether ImageMagick support
is desired.  The makefile may need some tweaking on Windows systems (e.g. you
may want to write the output to 'ale.exe' or something.


Using ALE (version 0.4.x)
-------------------------

Usage: ale [<options>] <original-frame> [<supplemental-frame> ...] <output-file>
   or: ale --version

ALE merges supplemental frames with an original frame to produce a single
output file result.  Unless ALE has been compiled with the ImageMagick option,
all files must be in PPM binary (as opposed to ascii) format.  The merge is
produced incrementally, and the output file is updated as the process
progresses.  Options are described in the next section.


Options (version 0.4.3)
-----------------------


Alignment channel options:

--align-all       Align images using all color channels
--align-green     Align images using the green channel
--align-sum       Align images using a sum of channels [default]


Transformation options:

--translation     Only adjust the position of images
--euclidean       Adjust the position and orientation of images [default]
--projective      Use projective transformations.  Best quality, but slow.


Image extents:

--extend          Increase output image extents to accommodate all pixel data.
--no-extend       Don't increase extents; crop to original frame. [default]


Transformation defaults:

--identity        Default alignment begins with identity transform. [default]
--follow          Default alignment begins with the previous frame's transform.


Transformation file operations:

--trans-load=x    Load initial transformation settings from file x
--trans-save=x    Save final transformation data in file x


Tunable parameters:

--scale=x         Scale images by the factor x (where x is at least 1.0)
--hf-enhance=x    Enhance high frequency details by factor x. (0.0 is default)
--metric=x        Set the error metric exponent (2 is default)
--threshold=x     Min. match threshold; a perfect match is 100.  (0 is default)
--perturb-upper=x Max. correction step, in pixels or degrees (32.0 is default)
--perturb-lower=x Min. correction step, in pixels or degrees (.125 is default)


Drizzling:

--drizzle-diam=x  Drizzle with input pixel diameter x (where 0 < x <= 1).
--drizzle-only    If drizzling, output black for pixels with no drizzle data.

 
Image reconstruction:
  
--ip <d> <i>      Irani-Peleg solve with pixel diameter <d> for <i> iterations.

 
Monte Carlo alignment:
 
--mc <x>          Align using, on average, x% of available pixels (0 < x < 100)
--no-mc           Align using all pixels.  [default]
 
 
File output options:
 
--inc             Produce incremental output.  [default]
--no-inc          Don't produce incremental output.


Option Descriptions (version 0.4.3)
-----------------------------------


Transformations:

ALE supports general projective transformations, the 'correct' type of
transformation to use with images obtained from digital cameras.  By default,
however, only euclidean transformations (i.e. rotation and translation) are
used.  To use general projective transformations, specify the option
'--projective'.  Note that alignment can take a long time when this option is
used.


Image extents:

By default, pixels falling outside of the region of the original frame are
discarded (--no-extend).  To increase spatial extents and accommodate all pixel
data, use the --extend option.  This option may be useful in providing
additional constraints for alignment.  


Transformation defaults:

When aligning a new supplemental frame, ALE must begin with an initial
transformation.  If this transformation is not supplied by a transformation
data file (see next section), a default transformation will be used.
The --identity option indicates that the identity transform should be used as
the default transformation, whereas --follow indicates that the previous
frame's final transformation should be used.  

If a frame does not meet the threshold (see Threshold section below), its final
transform will not be used by --follow.  If there is no valid previously
aligned frame to follow (e.g. when aligning the first supplemental frame), the
identity transform is used instead.

The --follow option may be useful when significant panning or zooming occurs.


Transformation data files:

Transformation data may be loaded from a file, overriding the transformation
defaults, or saved to a file once alignment is complete.  Note that projective
transformation data will be ignored when performing euclidean alignment.  On
the other hand, euclidean transformation data can be used to set the initial
values for projective alignment.  When loading transformation data, it may also
be useful to reduce the perturbation upper bound.  

ALE versions older than 0.4.1 will not correctly read transformation files
written with this version of ALE.


Perturbation bounds:

No correction step smaller than perturb-lower or larger than perturb-upper will
be made in aligning images.  Note that correction steps larger than 2 are
performed on images with a reduced level of detail and that all correction step
sizes are some power of two.  If the interval [perturb-lower, perturb-upper]
does not contain a power of two, no correction will be performed.

Using a lower bound larger than 2 may trigger a bug.


Error metric:

The error metric for pixel components a and b is (abs(a-b)^x), where x is the
error metric exponent.  Larger exponents will cause the alignment process to be
more influenced by smaller image details.  


Threshold:

If a supplemental frame does not meet the minimum match threshold, it will not
contribute to the final output and ALE will display the message 'no match'.
Match values should be be at least 0 and no larger than 100.


Scaling:

If a scaling argument is given, ALE will internally scale all input
frames by the scale factor, resulting in an output file of this larger
scale.  


High-frequency Enhancement:

ALE's high-frequency enhancement filter can be used in some cases to emphasize
edges realistically.  However, use of this option may also emphasize noise or
aliases, and may produce unrealistic contrast.  Enhancement occurs on the final
rendered output after all inputs have been processed, but before Irani-Peleg
image reconstruction.  Larger positive numbers imply greater enhancement.


Drizzling:

ALE's drizzle renderer may preserve image details better than the standard ALE
rendering approach, but may produce unrealistically speckled or mottled output
when used in conjunction with the --scale argument.  The diameter of drizzled
pixels is specified by --drizzle-diam=x, and --drizzle-only indicates that the
standard rendering approach should not be used as a fallback where no drizzle
data is available.

For more information about drizzling, see the paper by Hook and Fruchter,
"Variable-Pixel Linear Combination", or the following URL:

http://www.cv.nrao.edu/adass/adassVI/hookr.html


Image reconstruction (based on Irani-Peleg):

ALE's backprojection-based image reconstruction may provide realistic emphasis
of edges in scaled images.  However, this option is sensitive to the chosen
diameter, and small diameters can cause speckled output.  The results of image
reconstruction are written just prior to program termination.

For more information on the backprojection technique of Irani and Peleg, see
their paper, "Improving Resolution by Image Registration", at

ftp://ftp.wisdom.weizmann.ac.il/pub/irani/PAPERS/SR_CVGIP91.pdf


Monte Carlo alignment:

Monte Carlo alignment uses a random subset of pixels to determine image
alignment, possibly reducing alignment time.  

The expected size of the random subset is specified as a percentage of pixels.
If the expected size is larger than the number of available pixels (e.g. when
aligning at a reduced level of detail), then all pixels will be used.  Since
the distance between sampled pixels is randomly chosen, it is possible that the
actual number of pixels sampled differs from the expected number.

Note that small subsets may adversely affect alignment.  In this case, it may
be helpful to use the --threshold option to exclude images that are poorly
aligned.  Alternatively, increasing the subset size may improve alignment.
 
 
File output options:

ALE normally produces incremental output of the merging or drizzling process.
In this case, the output file is written after the original frame is loaded and
after each supplemental frame has been aligned.  To suppress incremental output, 
specify the --no-inc option, in which case output will only occur after all
rendering steps are complete.
 

URLs
----

Home Page		http://auricle.dyndns.org/ALE/


Contact
-------

David Hilvert <dhilvert@ugcs.caltech.edu>
